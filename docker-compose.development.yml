services:
  frontend:
    build:
      context: ./frontend
    expose:
      - "3000"
    volumes: # Mount for development only
      - ./frontend:/app 
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    networks:
      search_engine_network:

  backend:
    build:
      context: ./backend/development
      dockerfile: Dockerfile.backend
    expose:
      - "8000"
    volumes: # Mount for development only
      - ./backend:/app 
      - ./static:/static
    depends_on:
      - db
      - redis
    command: ["/bin/bash", "/app/development/init.sh"]
    environment:
      DJANGO_WEB_SERVICE_FLAG: 'True'
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DB_NAME: ${DJANGO_DB_NAME}
      DJANGO_DB_USER: ${DJANGO_DB_USER}
      DJANGO_DB_PASSWORD: ${DJANGO_DB_PASSWORD}
      DJANGO_DB_HOST: ${DJANGO_DB_HOST}
      DJANGO_DB_PORT: ${DJANGO_DB_PORT}
    networks:
      search_engine_network:
      
  scanner:
    build:
      context: ./backend/development
      dockerfile: Dockerfile.scanner
    volumes: # Mount for development only
      - ./backend:/app 
    depends_on:
      - db
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DB_NAME: ${DJANGO_DB_NAME}
      DJANGO_DB_USER: ${DJANGO_DB_USER}
      DJANGO_DB_PASSWORD: ${DJANGO_DB_PASSWORD}
      DJANGO_DB_HOST: ${DJANGO_DB_HOST}
      DJANGO_DB_PORT: ${DJANGO_DB_PORT}
    networks:
      search_engine_network:

  db:
    image: postgres:16
    expose:
      - "5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      DJANGO_DB_NAME: ${DJANGO_DB_NAME}
      DJANGO_DB_USER: ${DJANGO_DB_USER}
      DJANGO_DB_PASSWORD: ${DJANGO_DB_PASSWORD}
      DJANGO_DB_HOST: ${DJANGO_DB_HOST}
      DJANGO_DB_PORT: ${DJANGO_DB_PORT}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
    networks:
      search_engine_network:

  redis:
    image: redis:7.0
    expose:
      - "6379"
    volumes:
      - redis_data:/data
    networks:
      search_engine_network:

  nginx:
    image: nginx:1.27
    ports:
      - "80:80"
    volumes: # no Dockerfile here to copy files, so mount host
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./static:/static
    depends_on:
      - frontend
      - backend
    networks:
      search_engine_network:

  tor:
    image: lncm/tor:0.4.7.9
    expose:
      - "9050"
      - "9090"
    volumes:
      - ./tor/torrc:/etc/tor/torrc
    networks:
      search_engine_network:

volumes:
  db_data:
  redis_data:

networks:
  search_engine_network:
    driver: "bridge"
    driver_opts:
      com.docker.network.bridge.enable_ip_masquerade: "true"
    ipam:
      config:
        - subnet: "172.28.0.0/16"

